[
  {
    "objectID": "people.html",
    "href": "people.html",
    "title": "People",
    "section": "",
    "text": "Samuele Soraggi\n\n\nData Scientist, Aarhus University\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "resources/Slides/gwf/slides.html#when-you-need-to-ask-for-help",
    "href": "resources/Slides/gwf/slides.html#when-you-need-to-ask-for-help",
    "title": "Introduction to workflows on GenomeDK",
    "section": "When you need to ask for help",
    "text": "When you need to ask for help\n\nPractical help:\nSamuele (BiRC, MBG) - samuele@birc.au.dk\nDrop in hours:\n\nBioinformatics Cafe: https://abc.au.dk, abcafe@au.dk\nSamuele (BiRC, MBG) - samuele@birc.au.dk\n\nGeneral mail for assistance\nsupport@genome.au.dk"
  },
  {
    "objectID": "resources/Slides/gwf/slides.html#what-you-need",
    "href": "resources/Slides/gwf/slides.html#what-you-need",
    "title": "Introduction to workflows on GenomeDK",
    "section": "What you need",
    "text": "What you need\n\nThe basics to use the cluster\nBeing able to edit documents on the cluster\nHave conda or pixi installed\nIf possible a project on the cluster"
  },
  {
    "objectID": "resources/Slides/gwf/slides.html#program",
    "href": "resources/Slides/gwf/slides.html#program",
    "title": "Introduction to workflows on GenomeDK",
    "section": "Program",
    "text": "Program\n\n10:00-10:45:\n\nWorkshop Introduction\nBackground on workflows/pipelines\nWorkflow file structure and templates\nA small example\nCake and Questions\n\n11:00-12:00:\n\nWorkflow for the exercise\nPrepare for the workflow: data, software, workflow file\nInvestigate specific parts of the workflow\nExecute one or more targets\nVerify what happens with each target\n\n12:45-13:45:\n\ncalibrate your resources\nadd a template and targets to a pipeline\n\n13:45-14:00:\n\nQuestions\nFeedback"
  },
  {
    "objectID": "resources/Slides/gwf/slides.html#workflow-terminology",
    "href": "resources/Slides/gwf/slides.html#workflow-terminology",
    "title": "Introduction to workflows on GenomeDK",
    "section": "Workflow terminology",
    "text": "Workflow terminology\n\n\n\n\n\nflowchart LR\n  A0([\"Start\"]) ---&gt;|data.txt| A[\"Rename\"]\n  A ---&gt;|samples.txt| B([\"End\"])\n\n\n\n\n\n\n \n\n\n\n\n\n\n\nWorkflow and W. Management System\n\n\nA workflow is a series of calculations and data manipulations which have to be performed in a specific sequence.\n \nA workflow management system organizes the workflow steps through defined dependencies, can assign different computing resources to each step, keeps a log of the workflow, interacts with a cluster’s queueing system."
  },
  {
    "objectID": "resources/Slides/gwf/slides.html#gwf-workflow-manager",
    "href": "resources/Slides/gwf/slides.html#gwf-workflow-manager",
    "title": "Introduction to workflows on GenomeDK",
    "section": "Gwf workflow manager",
    "text": "Gwf workflow manager\nA lightweight and easy to adopt workflow manager. It requires only some basic Python - you can learn it along the way starting from examples. Some features:\n \n\nDeveloped at AU (Dan at GenomeDK) and used also at MOMA, AUH, …\n\nEasy to find support\n\nIn python, no need for a workflow language\n\nYou can use all python functions to build your workflow!\n\nEasy to structure a workflow and check resource usage\n\nReusable templates\nVery pedagogical\n\nConda, Pixi, Container usage out-of-the-box"
  },
  {
    "objectID": "resources/Slides/gwf/slides.html#exercise-i-workflow-with-conda-environments",
    "href": "resources/Slides/gwf/slides.html#exercise-i-workflow-with-conda-environments",
    "title": "Introduction to workflows on GenomeDK",
    "section": "Exercise I: workflow with conda environments",
    "text": "Exercise I: workflow with conda environments\nPrepare everything for the exercise: create a new folder, then download data and workflow file\n mkdir -p myPipeline\n cd myPipeline\n\n wget https://github.com/hds-sandbox/GDKworkshops/raw/refs/heads/main/Examples/smallGwf/data.fq -O data.fq\n wget https://github.com/hds-sandbox/GDKworkshops/raw/refs/heads/main/Examples/smallGwf/workflow.py -O workflow.py"
  },
  {
    "objectID": "resources/Slides/gwf/slides.html#exercise-ii-singularity-in-workflows",
    "href": "resources/Slides/gwf/slides.html#exercise-ii-singularity-in-workflows",
    "title": "Introduction to workflows on GenomeDK",
    "section": "Exercise II: singularity in workflows",
    "text": "Exercise II: singularity in workflows\nNow, you will change the executor for the template table. Your task is to:\n\nopen the workflow.py file\nbelow importing the Conda module (line 2), add a new line with\nfrom gwf.executors import Singularity\nNow, define a new executor. Below the line where you define conda_env = Conda(\"seqkitEnv\"), use a similar syntax and write sing = Singularity(\"seqkit_2.10.0\"), where you provide the container file as argument.\nAt the end of the align template, use the new executor sing instead of conda_env.\n\n \nDid you do it right? If yes, then you should be able to run the combine target:\ngwf run combine\nand see its status become completed after some time. All output files should be created in your folder! If not, something is wrong. Ask for help, or look at the solution file, if you prefer.\n\n\n\n\n\n\nNote\n\n\nBecause combine depends on all table_ targets, it will submit all those targets as well, which need to run first.\n\n\n\nExercise break"
  },
  {
    "objectID": "resources/Slides/gwf/slides.html#exercise-iii-your-own-target",
    "href": "resources/Slides/gwf/slides.html#exercise-iii-your-own-target",
    "title": "Introduction to workflows on GenomeDK",
    "section": "Exercise III: Your own target!",
    "text": "Exercise III: Your own target!\nOk, now we want to extend the workflow and do quality control on the part_###.fq files.\n\n\n\n\n\nflowchart LR\n  A0([\"Start\"]) --&gt;|data.fq| A[\"split\"]\n  A --&gt;|part001.fq| B[\"table\"]\n  A --&gt;|part002.fq| C[\"table\"]\n  A --&gt;|part....fq| D[\"table\"]\n  A --&gt;|part010.fq| E[\"table\"]\n  B --&gt;|table001.tsv| F[\"merge\"]\n  C --&gt;|table002.tsv| F\n  D --&gt;|table....tsv| F\n  E --&gt;|table010.tsv| F\n  F --&gt;|table.tsv| G([\"End\"])\n  A --&gt;|\"part[001-010].fq\"| H[\"qc\"]\n  H --&gt;|multiqc_report.html| I([\"End\"])"
  },
  {
    "objectID": "resources/Slides/gwf2024/slides.html#workflow",
    "href": "resources/Slides/gwf2024/slides.html#workflow",
    "title": "Introduction to workflows with gwf",
    "section": "Workflow",
    "text": "Workflow\n\n\n\n\n\n\n\n\nWorkflow and W. Management System\n\n\nA workflow is a series of calculations and data manipulations which have to be performed in a specific sequence. A workflow management system organizes the workflow steps through defined dependencies, can assign different computing resources to each step, keeps a log of the workflow, interacts with a cluster’s queueing system."
  },
  {
    "objectID": "resources/Slides/gwf2024/slides.html#a-few-terms",
    "href": "resources/Slides/gwf2024/slides.html#a-few-terms",
    "title": "Introduction to workflows with gwf",
    "section": "A few terms",
    "text": "A few terms\n\nEach target of the workflow is submitted to a queueing manager so that it enters the queue and can be executed when possible."
  },
  {
    "objectID": "resources/Slides/gwf2024/slides.html#gwf",
    "href": "resources/Slides/gwf2024/slides.html#gwf",
    "title": "Introduction to workflows with gwf",
    "section": "Gwf",
    "text": "Gwf\nA lightweight and easy to adopt workflow manager. it requires knowing or learning Python. Some useful features:\n\nDefines target dependencies automatically using the input and output files of targets\nOnly submits targets when their output files are not up to date\nFire-and-forget: once you submit targets, you need not do more\nHas a few, simple and useful commands for following workflow execution and cleaning up intermediate data files\n\nCheck out the gwf webpage for updates, examples and more detailed documentation."
  },
  {
    "objectID": "resources/Slides/gwf2024/slides.html#download-examples-and-data",
    "href": "resources/Slides/gwf2024/slides.html#download-examples-and-data",
    "title": "Introduction to workflows with gwf",
    "section": "Download examples and data",
    "text": "Download examples and data\nExamples and reference file\ncurl -L -o gwf_workshop.zip https://github.com/hds-sandbox/GDKworkshops/archive/main.zip \\\n    && unzip gwf_workshop.zip \\\n    && mv GDKworkshops-main/Examples/gwf gwf_workshop \\\n    && rm -rf GDKworkshops-main gwf_workshop.zip\nDownload fastq files\nmkdir -p gwf_workshop/data\ncd gwf_workshop/data/\n\ncurl -O ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR258/004/SRR2589044/SRR2589044_1.fastq.gz\ncurl -O ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR258/004/SRR2589044/SRR2589044_2.fastq.gz\ncurl -O ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR258/003/SRR2584863/SRR2584863_1.fastq.gz\ncurl -O ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR258/003/SRR2584863/SRR2584863_2.fastq.gz\ncurl -O ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR258/006/SRR2584866/SRR2584866_1.fastq.gz\ncurl -O ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR258/006/SRR2584866/SRR2584866_2.fastq.gz\n\ncd .."
  },
  {
    "objectID": "resources/Slides/gwf2024/slides.html#install-gwf",
    "href": "resources/Slides/gwf2024/slides.html#install-gwf",
    "title": "Introduction to workflows with gwf",
    "section": "Install gwf",
    "text": "Install gwf\nUsing conda to create a new environment from the yml file:\nconda env create -n gwf_workshop -f Environments/gwf_workshop.yml\nconda activate gwf_workshop\nYou can see the package list with\ncat Environments/gwf_workshop.yml\n\nThe whole environment dependencies and versions can be seen with\nconda list"
  },
  {
    "objectID": "resources/Slides/gwf2024/slides.html#status-and-submission",
    "href": "resources/Slides/gwf2024/slides.html#status-and-submission",
    "title": "Introduction to workflows with gwf",
    "section": "Status and submission",
    "text": "Status and submission\nWe can see what is the status of each target - if it doesn’t see the output files (shouldrun), if the output is there (completed), if it is executing a target (running), or if it failed (‘failed’).\ngwf -f WF01_report.py status\nwill show\n⨯ FastQC        shouldrun\n\nYou can submit the targets with\ngwf -f WF01_report.py run\nwhich reports you\nSubmitting target FastQC\n\n\nLook again at the status. You can follow it up in real-time using watch (it will lose the nice colour formatting):\nwatch gwf -f WF01_report.py status\nYou might see it going from submitted to running and completed:\n✓ FastQC        completed"
  },
  {
    "objectID": "resources/Slides/gwf2024/slides.html#targets-stdout-and-stderr",
    "href": "resources/Slides/gwf2024/slides.html#targets-stdout-and-stderr",
    "title": "Introduction to workflows with gwf",
    "section": "Targets stdout and stderr",
    "text": "Targets stdout and stderr\nWhat are the commands in a target outputting? You can see stdout and stderr in the log of a target:\ngwf -f WF01_report.py logs FastQC\nand\ngwf -f WF01_report.py logs -e FastQC"
  },
  {
    "objectID": "resources/Slides/gwf2024/slides.html#useful-gwf-checks-and-debug",
    "href": "resources/Slides/gwf2024/slides.html#useful-gwf-checks-and-debug",
    "title": "Introduction to workflows with gwf",
    "section": "Useful gwf checks and debug",
    "text": "Useful gwf checks and debug\nYou can see the status with specific messages about the status of each target and what causes it.\ngwf -f WF02_report_parallel.py -v debug status\nAt the end of the debug messages, you will see that one FastQC is already complete from the first example.\n⨯ FastQC_SRR2584866_1 shouldrun\n⨯ FastQC_SRR2589044_1 shouldrun\n✓ FastQC_SRR2584863_1 completed\n⨯ FastQC_SRR2584863_2 shouldrun\n⨯ FastQC_SRR2589044_2 shouldrun\n⨯ FastQC_SRR2584866_2 shouldrun"
  },
  {
    "objectID": "resources/Slides/gwf2024/slides.html#protected-outputs-and-cleaning",
    "href": "resources/Slides/gwf2024/slides.html#protected-outputs-and-cleaning",
    "title": "Introduction to workflows with gwf",
    "section": "protected outputs and cleaning",
    "text": "protected outputs and cleaning\nThe workflow parameter\nprotect=['results/multiqc_output/multiqc_report.html']\nprevents you from deleting the specified file when using clean. The clean command removes all intermediate outputs of a workflow (not essential for the result report and which can be replicated by rerunning the workflow).  \n\n\n\n\n\n\n\nEndpoints’ files are protected\n\n\nFiles generated by endpoints (targets which are not dependencies of others, i.e. at the end of the workflow) do not get deleted. clean --all removes any file in the workflow."
  },
  {
    "objectID": "resources/Slides/gwf2024/slides.html#status-with-filters",
    "href": "resources/Slides/gwf2024/slides.html#status-with-filters",
    "title": "Introduction to workflows with gwf",
    "section": "status with filters",
    "text": "status with filters\nWe know all FastQC targets are completed. Run first the workflow\ngwf -f WF03_multi_report.py run\n\n \nNow look only at the endpoints to avoid a long list of FastQC targets:\ngwf -f WF03_multi_report.py status --endpoints\ngives for example\n↻ MultiQC     running\nunless it is still submitted or already completed."
  },
  {
    "objectID": "resources/Slides/gwf2024/slides.html#tasks-questions",
    "href": "resources/Slides/gwf2024/slides.html#tasks-questions",
    "title": "Introduction to workflows with gwf",
    "section": "Tasks-questions",
    "text": "Tasks-questions\nConsider the workflow file WF04_trimming.py:\n \n\napply gwf status to watch the endpoints of the workflow\nWhich is the file dependency common to all trim targets?\nrun the workflow and…\n…apply watch gwf status and follow only the running targets\nLook at the stderr printout of one trimming target"
  },
  {
    "objectID": "resources/Slides/gwf2024/slides.html#code",
    "href": "resources/Slides/gwf2024/slides.html#code",
    "title": "Introduction to workflows with gwf",
    "section": "Code",
    "text": "Code\nfastq_pairs = np.unique([ FASTQ.split('_')[0] for FASTQ in fastq_basenames ]) #names without pair number and extension\n\nfor FASTQ_PAIR in fastq_pairs:\n    gwf.target( f\"Trimmomatic_{FASTQ_PAIR}\", #name of the target\n           cores=8,\n           memory='8gb',\n           walltime='00:10:00', \n           inputs= {'ADAPTERS': ['fasta/NexteraPE-PE.fa'],\n                    'FASTQS': [f'data/{FASTQ_PAIR}_1.fastq.gz',\n                               f'data/{FASTQ_PAIR}_2.fastq.gz'],\n                    'MULTIQC': ['results/multiqc_output/multiqc_report.html']}, \n           outputs=[f'data_trim/{FASTQ_PAIR}_1.trim.fastq.gz',\n                    f'data_trim/{FASTQ_PAIR}_1un.trim.fastq.gz',\n                    f'data_trim/{FASTQ_PAIR}_2.trim.fastq.gz',\n                    f'data_trim/{FASTQ_PAIR}_2un.trim.fastq.gz']) &lt;&lt; \"\"\"\n    mkdir -p data_trim\n    trimmomatic PE -threads 8 \\\n                data/{FASTQ_PAIR}_1.fastq.gz data/{FASTQ_PAIR}_2.fastq.gz \\\n                data_trim/{FASTQ_PAIR}_1.trim.fastq.gz data_trim/{FASTQ_PAIR}_1un.trim.fastq.gz \\\n                data_trim/{FASTQ_PAIR}_2.trim.fastq.gz data_trim/{FASTQ_PAIR}_2un.trim.fastq.gz \\\n                SLIDINGWINDOW:4:20 MINLEN:25 ILLUMINACLIP:{ADAPTERFILE}:2:40:15\n    \"\"\".format(FASTQ_PAIR=FASTQ_PAIR, ADAPTERFILE='fasta/NexteraPE-PE.fa')"
  },
  {
    "objectID": "resources/Slides/gwf2024/slides.html#answers",
    "href": "resources/Slides/gwf2024/slides.html#answers",
    "title": "Introduction to workflows with gwf",
    "section": "Answers",
    "text": "Answers\n1. apply gwf status to watch the endpoints of the workflow\n \ngwf -f WF04_trimming.py status --endpoints\ngives\n⨯ Trimmomatic_SRR2584863 shouldrun\n⨯ Trimmomatic_SRR2584866 shouldrun\n⨯ Trimmomatic_SRR2589044 shouldrun"
  },
  {
    "objectID": "resources/Slides/gwf2024/slides.html#tasks-questions-1",
    "href": "resources/Slides/gwf2024/slides.html#tasks-questions-1",
    "title": "Introduction to workflows with gwf",
    "section": "Tasks-questions",
    "text": "Tasks-questions\nConsider the workflow file WF05_align_merge_plot.py:\n \n\nuse status to see which are the endpoint targets, then find their target dependencies\ndo you need to protect the final merged alignment in the target BAM_merge?\ncan the targets BAM_merge and Histogram run at the same time?\nA pair of fastq files is twice as large than the other two. If instead of aligning data in parallel targets you were to align pairs one at a time in the same target, how much more time would it take? (assuming parallel targets start running at the same time)\nRun the workflow and watch the status of the targets. You should see the running targets following the order of the dependencies. You should also find the pdf plot in the results folder."
  },
  {
    "objectID": "resources/Slides/gwf2024/slides.html#code-1",
    "href": "resources/Slides/gwf2024/slides.html#code-1",
    "title": "Introduction to workflows with gwf",
    "section": "Code",
    "text": "Code\nfor FASTQ_PAIR in fastq_pairs:\n    gwf.target( f\"BWA_mem_{FASTQ_PAIR}\", #name of the target\n           cores=8,\n           memory='16gb',\n           walltime='00:15:00', \n           inputs= {'INDEXING': [ 'fasta/ecoli_rel606.fasta.'+ extension for extension in ['amb','ann','bwt','pac','sa'] ],\n                    'FASTQS': [f'data_trim/{FASTQ_PAIR}_1.trim.fastq.gz',\n                               f'data_trim/{FASTQ_PAIR}_2.trim.fastq.gz']}, \n           outputs=[f'results/alignments/{FASTQ_PAIR}.sort.bam',\n                    f'results/depths/{FASTQ_PAIR}.depth','results/depths/hellosamtools.txt' ]) &lt;&lt; \"\"\"\n    mkdir -p results/alignments\n    bwa mem -t 8 fasta/ecoli_rel606.fasta \\\n            data_trim/{FASTQ_PAIR}_1.trim.fastq.gz \\\n            data_trim/{FASTQ_PAIR}_2.trim.fastq.gz &gt; \\\n            results/alignments/{FASTQ_PAIR}.sam\n    samtools view -S -b results/alignments/{FASTQ_PAIR}.sam &gt; results/alignments/{FASTQ_PAIR}.bam\n    samtools sort -o results/alignments/{FASTQ_PAIR}.sort.bam results/alignments/{FASTQ_PAIR}.bam\n    ### print depths in text file\n    mkdir -p results/depths\n    samtools index results/alignments/{FASTQ_PAIR}.sort.bam\n    samtools depth results/alignments/{FASTQ_PAIR}.sort.bam &gt; results/depths/{FASTQ_PAIR}.depth && touch hellosamtools.txt\n    \"\"\".format(FASTQ_PAIR=FASTQ_PAIR)\n\ngwf.target( \"BAM_merge\", #name of the target\n           cores=1,\n           memory='8gb',\n           walltime='00:10:00', \n           inputs= [f'results/alignments/{FASTQ_PAIR}.sort.bam' for FASTQ_PAIR in fastq_pairs], \n           outputs=['results/alignments/merged.bam']) &lt;&lt; \"\"\"\n    samtools merge -f results/alignments/merged.bam results/alignments/*.sort.bam\n    samtools sort results/alignments/merged.bam -o results/alignments/merged.final.bam\n    \"\"\"\n\ngwf.target( \"Histogram\", #name of the target\n           cores=1,\n           memory='8gb',\n           walltime='00:10:00', \n           inputs= [f'results/depths/{FASTQ_PAIR}.depth' for FASTQ_PAIR in fastq_pairs], \n           outputs=[ 'results/depths/histogram.pdf' ]) &lt;&lt; \"\"\"\n    Rscript plotscript.R\n    \"\"\""
  },
  {
    "objectID": "resources/Slides/gwf2024/slides.html#answers-1",
    "href": "resources/Slides/gwf2024/slides.html#answers-1",
    "title": "Introduction to workflows with gwf",
    "section": "Answers",
    "text": "Answers\n1. use status to see which are the endpoint targets, then find their target dependencies\n \nThere are two endpoints: one for merging aligned files and one for plotting a histogram. Use\ngwf -f WF05_align_merge_plot.py status --endpoints\nto obtain\n⨯ BAM_merge     shouldrun\n⨯ Histogram     shouldrun\n\nUse the info command to see their file dependencies:\ngwf -f WF05_align_merge_plot.py info Histogram BAM_merge\nLook at the output to find out that Histogram and BAM_merge depend both on the following targets\n\"BWA_mem_SRR2589044\",\n\"BWA_mem_SRR2584866\",\n\"BWA_mem_SRR2584863\"\n\n\nNote though that they depend on different files from those targets!"
  },
  {
    "objectID": "resources/Slides/gwf2024/slides.html#using-a-separate-conda-environment-in-a-target",
    "href": "resources/Slides/gwf2024/slides.html#using-a-separate-conda-environment-in-a-target",
    "title": "Introduction to workflows with gwf",
    "section": "Using a separate conda environment in a target",
    "text": "Using a separate conda environment in a target\nYou might have a conda environment with a specific version of the package gwf, and then another environment with relevant packages, called for example tools_environment.\n\nTo activate that environment, add two lines into your bash code executed by the target:\n    eval \"$(conda shell.bash hook)\" \n    conda activate tools_environment"
  },
  {
    "objectID": "resources/Slides/gwf2024/slides.html#use-templates",
    "href": "resources/Slides/gwf2024/slides.html#use-templates",
    "title": "Introduction to workflows with gwf",
    "section": "Use templates",
    "text": "Use templates\nYou can define templates in your workflow, or in a separate file called for example templates.py. A template for the FastQC target could be\ndef fastqc(input=\"\", cores=1, memory='8gb', walltime='00:05:00'):\n    \"\"\"A template for fastqc\"\"\"\n    inputs = [f'{input}.fastq.gz']\n    outputs = [f'{input}_fastqc.zip',f'{input}_fastqc.html']\n    options = {\n        'cores': cores,\n        'memory': memory,\n        'walltime': walltime\n    }\n\n    spec = '''\n    fastqc {input}\n    '''.format(input=inputs[0])\n\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)"
  },
  {
    "objectID": "resources/Slides/gwf2024/slides.html#add-new-files-after-running-a-workflow",
    "href": "resources/Slides/gwf2024/slides.html#add-new-files-after-running-a-workflow",
    "title": "Introduction to workflows with gwf",
    "section": "Add new files after running a workflow",
    "text": "Add new files after running a workflow\nIf you add new data files and your workflow reads which files there are automatically, creating corresponding targets, then adding new files will update your workflow with new targets to be executed.\n\n \nExample: adding new fastq.gz files in the data folder of this workshop will update the workflow adding new steps and rendering others from completed to shouldrun."
  },
  {
    "objectID": "resources/Slides/Introduction/slides.html#when-you-need-to-ask-for-help",
    "href": "resources/Slides/Introduction/slides.html#when-you-need-to-ask-for-help",
    "title": "Use GenomeDK",
    "section": "When you need to ask for help",
    "text": "When you need to ask for help\n\nPractical help:\nSamuele (BiRC, MBG) - samuele@birc.au.dk\nDrop in hours:\n\nBioinformatics Cafe: https://abc.au.dk, abcafe@au.dk\nSamuele (BiRC, MBG) - samuele@birc.au.dk\n\nGeneral mail for assistance\nsupport@genome.au.dk"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.html#program",
    "href": "resources/Slides/Introduction/slides.html#program",
    "title": "Use GenomeDK",
    "section": "Program",
    "text": "Program\n\n10:00-11:00: What is GenomeDK, File System, virtual environments\n11:00-12:00: Exercise: access interface, new environment, transfer data, interactive job\n12:45-13:15: queueing system and jobs, estimate resource usage\n13:15-14:00: Send out your first job with slurm, estimate resource usage"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.html#get-the-slides",
    "href": "resources/Slides/Introduction/slides.html#get-the-slides",
    "title": "Use GenomeDK",
    "section": "Get the slides",
    "text": "Get the slides\nWebpage: https://hds-sandbox.github.io/GDKworkshops/\n\nSlides will always be up to date in this webpage"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.html#navigate-the-slides",
    "href": "resources/Slides/Introduction/slides.html#navigate-the-slides",
    "title": "Use GenomeDK",
    "section": "Navigate the slides",
    "text": "Navigate the slides"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.html#keep-slides-a-terminal-open-for-the-workshop",
    "href": "resources/Slides/Introduction/slides.html#keep-slides-a-terminal-open-for-the-workshop",
    "title": "Use GenomeDK",
    "section": "Keep slides + a terminal open for the workshop",
    "text": "Keep slides + a terminal open for the workshop\n\n\nThe basic softwares\n\n\n\nPowershell for windows\n\n\n\n\n\nTerminal for MacOS and Linux\n\n\n\nCustomizable\n\n\n\nTerminator for Linux - iTerm2 for MacOS\n\n\n\n\n\nTabby for Linux, MacOS, Windows"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.html#infrastructure",
    "href": "resources/Slides/Introduction/slides.html#infrastructure",
    "title": "Use GenomeDK",
    "section": "Infrastructure",
    "text": "Infrastructure\nGenomeDK is a computing cluster, i.e. a set of interconnected computers (nodes). GenomeDK has:\n\ncomputing nodes used for running programs (~15000 cores, 16GPUs)\nstorage nodes storing data in many hard drives (~23 PiB)\na network making nodes talk to each other\na frontend node from which you can send your programs to a node to be executed\na queueing system called slurm to prioritize the users’ program to be run"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.html#access",
    "href": "resources/Slides/Introduction/slides.html#access",
    "title": "Use GenomeDK",
    "section": "Access",
    "text": "Access\n\nCreating an account happens through this form at genome.au.dk"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.html#access-without-password",
    "href": "resources/Slides/Introduction/slides.html#access-without-password",
    "title": "Use GenomeDK",
    "section": "Access without password",
    "text": "Access without password\nIt is nice to avoid writing the password at every access. If you are on the cluster, exit from it to go back to your local computer\n[gdk]$  exit\n \nNow we set up a public-key authentication. We generate a key pair (public and private):\n[local]$  ssh-keygen -t ed25519\nAlways press Enter and do not insert any password when asked."
  },
  {
    "objectID": "resources/Slides/Introduction/slides.html#how-the-fs-is-organized",
    "href": "resources/Slides/Introduction/slides.html#how-the-fs-is-organized",
    "title": "Use GenomeDK",
    "section": "How the FS is organized",
    "text": "How the FS is organized\n\n\nFolders and files follow a hierarchy\n\n/ is the root folder of the filesystem - nothing is above that\nthe FS is shared across all machines and available to all users\nhome and faststorage are two of the folders in the root\nprojects are in /faststorage/project and linked to your home"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.html#exercise",
    "href": "resources/Slides/Introduction/slides.html#exercise",
    "title": "Use GenomeDK",
    "section": "Exercise:",
    "text": "Exercise:\nLog in: ssh USERNAME@login.genome.au.dk\n\n\n\n\n\n\nNote\n\n\nRun a command = Type a command + Enter\n\n\n\n\nRun pwd, You should see your home folder: /home/USERNAME\n\n/home/USERNAME is an example of path.\npwd shows your current folder (WD, Working Directory)\nyou can write paths starting FROM the WD!"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.html#exercise-contd",
    "href": "resources/Slides/Introduction/slides.html#exercise-contd",
    "title": "Use GenomeDK",
    "section": "Exercise cont’d",
    "text": "Exercise cont’d\nWe now set the WD into GDKintro and remove all text files in it. Then we download a zipped fastq file, unzip it, and print a preview!\ncd GDKintro\n\nrm *.txt\n\nwget https://github.com/hartwigmedical/testdata/raw/master/100k_reads_hiseq/TESTX/TESTX_H7YRLADXX_S1_L001_R1_001.fastq.gz \\\n     -O ./data.fastq.gz\n\ngunzip data.fastq.gz\n\nhead data.fastq"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.html#exercise-read-files",
    "href": "resources/Slides/Introduction/slides.html#exercise-read-files",
    "title": "Use GenomeDK",
    "section": "Exercise: Read files",
    "text": "Exercise: Read files\nUseful utility 1: less file reader. less is perfect for exploring (big) text files: you can scroll with the arrows, and quit pressing q. Try\n\nless data.fastq\n  The very first sequence you see should be\n@HISEQ_HU01:89:H7YRLADXX:1:1101:1116:2123 1:N:0:ATCACG\nTCTGTGTAAATTACCCAGCCTCACGTATTCCTTTAGAGCAATGCAAAACAGACTAGACAAAAGGCTTTTAAAAGTCTA\nATCTGAGATTCCTGACCAAATGT\n+\nCCCFFFFFHHHHHJJJJJJJJJJJJHIJJJJJJJJJIJJJJJJJJJJJJJJJJJJJHIJGHJIJJIJJJJJHHHHHHH\nFFFFFFFEDDEEEEDDDDDDDDD"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.html#exercise-write-files",
    "href": "resources/Slides/Introduction/slides.html#exercise-write-files",
    "title": "Use GenomeDK",
    "section": "Exercise: Write files",
    "text": "Exercise: Write files\nUseful utility 2: nano text editor. It open, edits and saves text files. Very useful for changes on the fly.\n\nTry nano data.fastq. Change a base in the first sequence,\nthen press Ctrl+O to save (give it a new file name newData.fastq and press Enter)\npress Ctrl+X to exit. If you use ls you can see the new saved file."
  },
  {
    "objectID": "resources/Slides/Introduction/slides.html#virtual-environments",
    "href": "resources/Slides/Introduction/slides.html#virtual-environments",
    "title": "Use GenomeDK",
    "section": "Virtual environments",
    "text": "Virtual environments\nEach project needs specific software versions dependent on each other for reproducibility - without interferring with other projects.\n \n\n\n\n\n\n\n\nDefinition\n\n\nA virtual environment keeps project-specific softwares and their dependencies separated\n \nA package manager is a software that can retrieve, download, install, upgrade packages easily and reliably"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.html#conda",
    "href": "resources/Slides/Introduction/slides.html#conda",
    "title": "Use GenomeDK",
    "section": "Conda",
    "text": "Conda\n \nConda is both a virtual environment and a package manager.\n\neasy to use and understand\ncan handle quite big environments\nenvironments are easily shareable\na large archive (Anaconda) of packages\nactive community of people archiving their packages on Anaconda"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.html#pixi",
    "href": "resources/Slides/Introduction/slides.html#pixi",
    "title": "Use GenomeDK",
    "section": "Pixi",
    "text": "Pixi\nA newer virtual env and package manager\n \n\nAn upgrade of Conda in speed and stability\nCan install the same packages as conda"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.html#exercise-contd---download-on-shell",
    "href": "resources/Slides/Introduction/slides.html#exercise-contd---download-on-shell",
    "title": "Use GenomeDK",
    "section": "Exercise cont’d - Download on shell",
    "text": "Exercise cont’d - Download on shell\nHow to download the environment files to our computer? Open a terminal on your computer and run this command:\nscp USERNAME@login.genome.au.dk:/home/USERNAME/GDKintro/environment.zip .\nscp needs your login and the absolute path to the file. We give also the download destination as the WD on the local computer (.)\n\n\n\n\n\n\nTip\n\n\nYou can also upload a file switching the order of origin and destination in scp. E.g.\nscp ./myFile.txt USERNAME@login.genome.au.dk:/home/USERNAME/GDKintro/myFile.txt"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.html#gdk-projects",
    "href": "resources/Slides/Introduction/slides.html#gdk-projects",
    "title": "Use GenomeDK",
    "section": "GDK projects",
    "text": "GDK projects\n\n\n\n\n\n\n\nwhat is a project\n\n\nProjects are contained in /faststorage/project/ and linked in your home, and are simple folders with some perks:\n\nyou have to request their creation to GDK administrators\naccess is limited to you, and users you invite\nCPU, GPU, storage and backup usage are registered under the project for each user\nyou can keep track of per-project and -user resource usage"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.html#creation",
    "href": "resources/Slides/Introduction/slides.html#creation",
    "title": "Use GenomeDK",
    "section": "Creation",
    "text": "Creation\nRequest a project (after login on GDK) with the command\ngdk-project-request -g &lt;project_name&gt;\n \nAfter GDK approval, a project folder with the desired name appears in ~ and /faststorage/project. You should be able to set the WD into that folder:\ncd &lt;project_name&gt;\nor\ncd ~/&lt;project_name&gt;"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.html#folders-management",
    "href": "resources/Slides/Introduction/slides.html#folders-management",
    "title": "Use GenomeDK",
    "section": "Folders management",
    "text": "Folders management\nHave a coherent folder structure - your future self sends manu thanks.\n\nExample of structure, which backs up raw data and analysis"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.html#what-is-a-job-on-a-hpc",
    "href": "resources/Slides/Introduction/slides.html#what-is-a-job-on-a-hpc",
    "title": "Use GenomeDK",
    "section": "What is a job on a HPC",
    "text": "What is a job on a HPC\nA computational task executed on requested HPC resources (computing nodes), which are handled by the queueing system (SLURM)."
  },
  {
    "objectID": "resources/Slides/Introduction/slides.html#interactive-jobs",
    "href": "resources/Slides/Introduction/slides.html#interactive-jobs",
    "title": "Use GenomeDK",
    "section": "Interactive jobs",
    "text": "Interactive jobs\nUseful to run a non-repetitive task interactively\nExamples:\n\nsplitting by chromosome that one bam file you just got\nopen Rstudio and Jupyterlab\ncompress/decompress multiple files, maybe in parallel\n\nOnce you exit from the job, anything running into it will stop."
  },
  {
    "objectID": "index.html#slides-portability",
    "href": "index.html#slides-portability",
    "title": "GenomeDK workshops",
    "section": "Slides portability",
    "text": "Slides portability\nThe slides are intended for GenomeDK, which is based on Linux Ubuntu. Very similarly, you can use these slides as a reference for other computing clusters based on Linux distributions. Please note that some tools might not be installed in your specific system, so some examples will eventually not work - you can always ask your local system administrator for a specific tool installation.\n\n\n\n\n\n\nWarning\n\n\n\nRemember always that GenomeDK has a documentation page."
  },
  {
    "objectID": "LICENSE.html",
    "href": "LICENSE.html",
    "title": "GenomeDK workshops",
    "section": "",
    "text": "Attribution-ShareAlike 4.0 International\n=======================================================================\nCreative Commons Corporation (“Creative Commons”) is not a law firm and does not provide legal services or legal advice. Distribution of Creative Commons public licenses does not create a lawyer-client or other relationship. Creative Commons makes its licenses and related information available on an “as-is” basis. Creative Commons gives no warranties regarding its licenses, any material licensed under their terms and conditions, or any related information. Creative Commons disclaims all liability for damages resulting from their use to the fullest extent possible.\nUsing Creative Commons Public Licenses\nCreative Commons public licenses provide a standard set of terms and conditions that creators and other rights holders may use to share original works of authorship and other material subject to copyright and certain other rights specified in the public license below. The following considerations are for informational purposes only, are not exhaustive, and do not form part of our licenses.\n Considerations for licensors: Our public licenses are\n intended for use by those authorized to give the public\n permission to use material in ways otherwise restricted by\n copyright and certain other rights. Our licenses are\n irrevocable. Licensors should read and understand the terms\n and conditions of the license they choose before applying it.\n Licensors should also secure all rights necessary before\n applying our licenses so that the public can reuse the\n material as expected. Licensors should clearly mark any\n material not subject to the license. This includes other CC-\n licensed material, or material used under an exception or\n limitation to copyright. More considerations for licensors:\nwiki.creativecommons.org/Considerations_for_licensors\n\n Considerations for the public: By using one of our public\n licenses, a licensor grants the public permission to use the\n licensed material under specified terms and conditions. If\n the licensor's permission is not necessary for any reason--for\n example, because of any applicable exception or limitation to\n copyright--then that use is not regulated by the license. Our\n licenses grant only permissions under copyright and certain\n other rights that a licensor has authority to grant. Use of\n the licensed material may still be restricted for other\n reasons, including because others have copyright or other\n rights in the material. A licensor may make special requests,\n such as asking that all changes be marked or described.\n Although not required by our licenses, you are encouraged to\n respect those requests where reasonable. More_considerations\n for the public:\nwiki.creativecommons.org/Considerations_for_licensees\n=======================================================================\nCreative Commons Attribution-ShareAlike 4.0 International Public License\nBy exercising the Licensed Rights (defined below), You accept and agree to be bound by the terms and conditions of this Creative Commons Attribution-ShareAlike 4.0 International Public License (“Public License”). To the extent this Public License may be interpreted as a contract, You are granted the Licensed Rights in consideration of Your acceptance of these terms and conditions, and the Licensor grants You such rights in consideration of benefits the Licensor receives from making the Licensed Material available under these terms and conditions.\nSection 1 – Definitions.\n\nAdapted Material means material subject to Copyright and Similar Rights that is derived from or based upon the Licensed Material and in which the Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor. For purposes of this Public License, where the Licensed Material is a musical work, performance, or sound recording, Adapted Material is always produced where the Licensed Material is synched in timed relation with a moving image.\nAdapter’s License means the license You apply to Your Copyright and Similar Rights in Your contributions to Adapted Material in accordance with the terms and conditions of this Public License.\nBY-SA Compatible License means a license listed at creativecommons.org/compatiblelicenses, approved by Creative Commons as essentially the equivalent of this Public License.\nCopyright and Similar Rights means copyright and/or similar rights closely related to copyright including, without limitation, performance, broadcast, sound recording, and Sui Generis Database Rights, without regard to how the rights are labeled or categorized. For purposes of this Public License, the rights specified in Section 2(b)(1)-(2) are not Copyright and Similar Rights.\nEffective Technological Measures means those measures that, in the absence of proper authority, may not be circumvented under laws fulfilling obligations under Article 11 of the WIPO Copyright Treaty adopted on December 20, 1996, and/or similar international agreements.\nExceptions and Limitations means fair use, fair dealing, and/or any other exception or limitation to Copyright and Similar Rights that applies to Your use of the Licensed Material.\nLicense Elements means the license attributes listed in the name of a Creative Commons Public License. The License Elements of this Public License are Attribution and ShareAlike.\nLicensed Material means the artistic or literary work, database, or other material to which the Licensor applied this Public License.\nLicensed Rights means the rights granted to You subject to the terms and conditions of this Public License, which are limited to all Copyright and Similar Rights that apply to Your use of the Licensed Material and that the Licensor has authority to license.\nLicensor means the individual(s) or entity(ies) granting rights under this Public License.\nShare means to provide material to the public by any means or process that requires permission under the Licensed Rights, such as reproduction, public display, public performance, distribution, dissemination, communication, or importation, and to make material available to the public including in ways that members of the public may access the material from a place and at a time individually chosen by them.\nSui Generis Database Rights means rights other than copyright resulting from Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, as amended and/or succeeded, as well as other essentially equivalent rights anywhere in the world.\nYou means the individual or entity exercising the Licensed Rights under this Public License. Your has a corresponding meaning.\n\nSection 2 – Scope.\n\nLicense grant.\n\nSubject to the terms and conditions of this Public License, the Licensor hereby grants You a worldwide, royalty-free, non-sublicensable, non-exclusive, irrevocable license to exercise the Licensed Rights in the Licensed Material to:\n\nreproduce and Share the Licensed Material, in whole or in part; and\nproduce, reproduce, and Share Adapted Material.\n\nExceptions and Limitations. For the avoidance of doubt, where Exceptions and Limitations apply to Your use, this Public License does not apply, and You do not need to comply with its terms and conditions.\nTerm. The term of this Public License is specified in Section 6(a).\nMedia and formats; technical modifications allowed. The Licensor authorizes You to exercise the Licensed Rights in all media and formats whether now known or hereafter created, and to make technical modifications necessary to do so. The Licensor waives and/or agrees not to assert any right or authority to forbid You from making technical modifications necessary to exercise the Licensed Rights, including technical modifications necessary to circumvent Effective Technological Measures. For purposes of this Public License, simply making modifications authorized by this Section 2(a)\n\nnever produces Adapted Material.\n\nDownstream recipients.\n\nOffer from the Licensor – Licensed Material. Every recipient of the Licensed Material automatically receives an offer from the Licensor to exercise the Licensed Rights under the terms and conditions of this Public License.\nAdditional offer from the Licensor – Adapted Material. Every recipient of Adapted Material from You automatically receives an offer from the Licensor to exercise the Licensed Rights in the Adapted Material under the conditions of the Adapter’s License You apply.\nNo downstream restrictions. You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, the Licensed Material if doing so restricts exercise of the Licensed Rights by any recipient of the Licensed Material.\n\nNo endorsement. Nothing in this Public License constitutes or may be construed as permission to assert or imply that You are, or that Your use of the Licensed Material is, connected with, or sponsored, endorsed, or granted official status by, the Licensor or others designated to receive attribution as provided in Section 3(a)(1)(A)(i).\n\nOther rights.\n\nMoral rights, such as the right of integrity, are not licensed under this Public License, nor are publicity, privacy, and/or other similar personality rights; however, to the extent possible, the Licensor waives and/or agrees not to assert any such rights held by the Licensor to the limited extent necessary to allow You to exercise the Licensed Rights, but not otherwise.\nPatent and trademark rights are not licensed under this Public License.\nTo the extent possible, the Licensor waives any right to collect royalties from You for the exercise of the Licensed Rights, whether directly or through a collecting society under any voluntary or waivable statutory or compulsory licensing scheme. In all other cases the Licensor expressly reserves any right to collect such royalties.\n\n\nSection 3 – License Conditions.\nYour exercise of the Licensed Rights is expressly made subject to the following conditions.\n\nAttribution.\n\nIf You Share the Licensed Material (including in modified form), You must:\n\nretain the following if it is supplied by the Licensor with the Licensed Material:\n\nidentification of the creator(s) of the Licensed Material and any others designated to receive attribution, in any reasonable manner requested by the Licensor (including by pseudonym if designated);\na copyright notice;\na notice that refers to this Public License;\na notice that refers to the disclaimer of warranties;\na URI or hyperlink to the Licensed Material to the extent reasonably practicable;\n\nindicate if You modified the Licensed Material and retain an indication of any previous modifications; and\nindicate the Licensed Material is licensed under this Public License, and include the text of, or the URI or hyperlink to, this Public License.\n\nYou may satisfy the conditions in Section 3(a)(1) in any reasonable manner based on the medium, means, and context in which You Share the Licensed Material. For example, it may be reasonable to satisfy the conditions by providing a URI or hyperlink to a resource that includes the required information.\nIf requested by the Licensor, You must remove any of the information required by Section 3(a)(1)(A) to the extent reasonably practicable.\n\nShareAlike.\nIn addition to the conditions in Section 3(a), if You Share Adapted Material You produce, the following conditions also apply.\n\nThe Adapter’s License You apply must be a Creative Commons license with the same License Elements, this version or later, or a BY-SA Compatible License.\nYou must include the text of, or the URI or hyperlink to, the Adapter’s License You apply. You may satisfy this condition in any reasonable manner based on the medium, means, and context in which You Share Adapted Material.\nYou may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, Adapted Material that restrict exercise of the rights granted under the Adapter’s License You apply.\n\n\nSection 4 – Sui Generis Database Rights.\nWhere the Licensed Rights include Sui Generis Database Rights that apply to Your use of the Licensed Material:\n\nfor the avoidance of doubt, Section 2(a)(1) grants You the right to extract, reuse, reproduce, and Share all or a substantial portion of the contents of the database;\nif You include all or a substantial portion of the database contents in a database in which You have Sui Generis Database Rights, then the database in which You have Sui Generis Database Rights (but not its individual contents) is Adapted Material,\nincluding for purposes of Section 3(b); and\nYou must comply with the conditions in Section 3(a) if You Share all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not replace Your obligations under this Public License where the Licensed Rights include other Copyright and Similar Rights.\nSection 5 – Disclaimer of Warranties and Limitation of Liability.\n\nUNLESS OTHERWISE SEPARATELY UNDERTAKEN BY THE LICENSOR, TO THE EXTENT POSSIBLE, THE LICENSOR OFFERS THE LICENSED MATERIAL AS-IS AND AS-AVAILABLE, AND MAKES NO REPRESENTATIONS OR WARRANTIES OF ANY KIND CONCERNING THE LICENSED MATERIAL, WHETHER EXPRESS, IMPLIED, STATUTORY, OR OTHER. THIS INCLUDES, WITHOUT LIMITATION, WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, ABSENCE OF LATENT OR OTHER DEFECTS, ACCURACY, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT KNOWN OR DISCOVERABLE. WHERE DISCLAIMERS OF WARRANTIES ARE NOT ALLOWED IN FULL OR IN PART, THIS DISCLAIMER MAY NOT APPLY TO YOU.\nTO THE EXTENT POSSIBLE, IN NO EVENT WILL THE LICENSOR BE LIABLE TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION, NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT, INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES, COSTS, EXPENSES, OR DAMAGES ARISING OUT OF THIS PUBLIC LICENSE OR USE OF THE LICENSED MATERIAL, EVEN IF THE LICENSOR HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH LOSSES, COSTS, EXPENSES, OR DAMAGES. WHERE A LIMITATION OF LIABILITY IS NOT ALLOWED IN FULL OR IN PART, THIS LIMITATION MAY NOT APPLY TO YOU.\nThe disclaimer of warranties and limitation of liability provided above shall be interpreted in a manner that, to the extent possible, most closely approximates an absolute disclaimer and waiver of all liability.\n\nSection 6 – Term and Termination.\n\nThis Public License applies for the term of the Copyright and Similar Rights licensed here. However, if You fail to comply with this Public License, then Your rights under this Public License terminate automatically.\nWhere Your right to use the Licensed Material has terminated under Section 6(a), it reinstates:\n\nautomatically as of the date the violation is cured, provided it is cured within 30 days of Your discovery of the violation; or\nupon express reinstatement by the Licensor.\n\nFor the avoidance of doubt, this Section 6(b) does not affect any right the Licensor may have to seek remedies for Your violations of this Public License.\nFor the avoidance of doubt, the Licensor may also offer the Licensed Material under separate terms or conditions or stop distributing the Licensed Material at any time; however, doing so will not terminate this Public License.\nSections 1, 5, 6, 7, and 8 survive termination of this Public License.\n\nSection 7 – Other Terms and Conditions.\n\nThe Licensor shall not be bound by any additional or different terms or conditions communicated by You unless expressly agreed.\nAny arrangements, understandings, or agreements regarding the Licensed Material not stated herein are separate from and independent of the terms and conditions of this Public License.\n\nSection 8 – Interpretation.\n\nFor the avoidance of doubt, this Public License does not, and shall not be interpreted to, reduce, limit, restrict, or impose conditions on any use of the Licensed Material that could lawfully be made without permission under this Public License.\nTo the extent possible, if any provision of this Public License is deemed unenforceable, it shall be automatically reformed to the minimum extent necessary to make it enforceable. If the provision cannot be reformed, it shall be severed from this Public License without affecting the enforceability of the remaining terms and conditions.\nNo term or condition of this Public License will be waived and no failure to comply consented to unless expressly agreed to by the Licensor.\nNothing in this Public License constitutes or may be interpreted as a limitation upon, or waiver of, any privileges and immunities that apply to the Licensor or You, including from the legal processes of any jurisdiction or authority.\n\n=======================================================================\nCreative Commons is not a party to its public licenses. Notwithstanding, Creative Commons may elect to apply one of its public licenses to material it publishes and in those instances will be considered the “Licensor.” The text of the Creative Commons public licenses is dedicated to the public domain under the CC0 Public Domain Dedication. Except for the limited purpose of indicating that material is shared under a Creative Commons public license or as otherwise permitted by the Creative Commons policies published at creativecommons.org/policies, Creative Commons does not authorize the use of the trademark “Creative Commons” or any other trademark or logo of Creative Commons without its prior written consent including, without limitation, in connection with any unauthorized modifications to any of its public licenses or any other arrangements, understandings, or agreements concerning use of licensed material. For the avoidance of doubt, this paragraph does not form part of the public licenses.\nCreative Commons may be contacted at creativecommons.org."
  },
  {
    "objectID": "resources/Slides/linuxbasic/slides.html#interaction-with-hardware",
    "href": "resources/Slides/linuxbasic/slides.html#interaction-with-hardware",
    "title": "Introduction to bash command line for Bioinformatics",
    "section": "Interaction with hardware",
    "text": "Interaction with hardware\nComputer hardware can act on files and softwares through:\n\n\na Graphical User Interface (GUI), such as your point-and-click operating system\na Command Line Interface (CLI) or terminal, where commands are interpreted and translated into actions"
  },
  {
    "objectID": "resources/Slides/linuxbasic/slides.html#bash-cli-on-genomedk",
    "href": "resources/Slides/linuxbasic/slides.html#bash-cli-on-genomedk",
    "title": "Introduction to bash command line for Bioinformatics",
    "section": "Bash CLI on GenomeDK",
    "text": "Bash CLI on GenomeDK\nWhen logging in on GenomeDK from the terminal, you are presented with the cluster’s CLI.\nFrom this, you can access files and software using the bash language.\nComputer hardware can act on files and softwares through:\n\n\na Graphical User Interface (GUI), such as your point-and-click operating system\na Command Line Interface (CLI) or terminal, where commands are interpreted and translated into actions"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#when-you-need-to-ask-for-help",
    "href": "resources/Slides/Introduction/slides.backup.html#when-you-need-to-ask-for-help",
    "title": "Use GenomeDK",
    "section": "When you need to ask for help",
    "text": "When you need to ask for help\n\nPractical help:\nSamuele (BiRC, MBG) - samuele@birc.au.dk\nDrop in hours:\n\nBioinformatics Cafe: https://abc.au.dk, abc@au.dk\nSamuele (BiRC, MBG) - samuele@birc.au.dk\n\nGeneral mail for assistance\nsupport@genome.au.dk"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#program",
    "href": "resources/Slides/Introduction/slides.backup.html#program",
    "title": "Use GenomeDK",
    "section": "Program",
    "text": "Program\n\n10:00-11:00: What is GenomeDK, File System, virtual environments\n11:00-12:00: Exercise: access interface, new environment, transfer data, interactive job\n12:45-13:15: queueing system and jobs, estimate resource usage\n13:15-14:00: Send out your first job with slurm, estimate resource usage"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#get-the-slides",
    "href": "resources/Slides/Introduction/slides.backup.html#get-the-slides",
    "title": "Use GenomeDK",
    "section": "Get the slides",
    "text": "Get the slides\nWebpage: https://hds-sandbox.github.io/GDKworkshops/\n\nSlides will always be up to date in this webpage"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#navigate-the-slides",
    "href": "resources/Slides/Introduction/slides.backup.html#navigate-the-slides",
    "title": "Use GenomeDK",
    "section": "Navigate the slides",
    "text": "Navigate the slides"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#software-for-command-line",
    "href": "resources/Slides/Introduction/slides.backup.html#software-for-command-line",
    "title": "Use GenomeDK",
    "section": "Software for command line",
    "text": "Software for command line\n\n\nThe basic softwares\n\n\n\nPowershell for windows\n\n\n\n\n\nTerminal for MacOS and Linux\n\n\n\nCustomizable\n\n\n\nTerminator for Linux - iTerm2 for MacOS\n\n\n\n\n\nTabby for Linux, MacOS, Windows"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#infrastructure",
    "href": "resources/Slides/Introduction/slides.backup.html#infrastructure",
    "title": "Use GenomeDK",
    "section": "Infrastructure",
    "text": "Infrastructure\nGenomeDK is a computing cluster, i.e. a set of interconnected computers (nodes). GenomeDK has:\n\ncomputing nodes used for running programs (~15000 cores)\nstorage nodes storing data in many hard drives (~23 PiB)\na network making nodes talk to each other\na frontend node from which you can send your programs to a node to be executed\na queueing system called slurm to prioritize the users’ program to be run"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#access",
    "href": "resources/Slides/Introduction/slides.backup.html#access",
    "title": "Use GenomeDK",
    "section": "Access",
    "text": "Access\n\nCreating an account happens through this form at genome.au.dk"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#access-without-password",
    "href": "resources/Slides/Introduction/slides.backup.html#access-without-password",
    "title": "Use GenomeDK",
    "section": "Access without password",
    "text": "Access without password\nIt is nice to avoid writing the password at every access. If you are on the cluster, exit from it to go back to your local computer\n[gdk]$  exit\n \nNow we set up a public-key authentication. We generate a key pair (public and private):\n[local]$  ssh-keygen -t ed25519\nAlways press Enter and do not insert any password when asked."
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#how-the-fs-is-organized",
    "href": "resources/Slides/Introduction/slides.backup.html#how-the-fs-is-organized",
    "title": "Use GenomeDK",
    "section": "How the FS is organized",
    "text": "How the FS is organized\n\n\nFolders and files follow a tree-like structure\n\n/ is the root folder of the filesystem - nothing is above that\nthe FS is shared across all machines and available to all users\nhome and faststorage are two of the folders in the root\nprojects are in /faststorage/project and linked to your home"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#exercise",
    "href": "resources/Slides/Introduction/slides.backup.html#exercise",
    "title": "Use GenomeDK",
    "section": "Exercise:",
    "text": "Exercise:\nLog in: ssh USERNAME@login.genome.au.dk\n\n\n\n\n\n\nNote\n\n\nRun a command = Type a command + Enter\n\n\n\n\nRun pwd, You should see your home folder: /home/USERNAME\n\n/home/USERNAME is an example of path.\npwd shows your current folder (WD, Working Directory)\nyou can write paths starting FROM the WD!"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#exercise-contd",
    "href": "resources/Slides/Introduction/slides.backup.html#exercise-contd",
    "title": "Use GenomeDK",
    "section": "Exercise cont’d",
    "text": "Exercise cont’d\nWe now set the WD into GDKintro and remove all text files in it. Then we download a zipped fastq file, unzip it, and print a preview!\ncd GDKintro\n\nrm *.txt\n\nwget https://github.com/hartwigmedical/testdata/raw/master/100k_reads_hiseq/TESTX/TESTX_H7YRLADXX_S1_L001_R1_001.fastq.gz \\\n     -O ./data.fastq.gz\n\ngunzip data.fastq.gz\n\nhead data.fastq"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#exercise-read-files",
    "href": "resources/Slides/Introduction/slides.backup.html#exercise-read-files",
    "title": "Use GenomeDK",
    "section": "Exercise: Read files",
    "text": "Exercise: Read files\nUseful utility 1: less file reader. less is perfect for exploring (big) text files: you can scroll with the arrows, and quit pressing q. Try\n\nless data.fastq\n  The very first sequence you see should be\n@HISEQ_HU01:89:H7YRLADXX:1:1101:1116:2123 1:N:0:ATCACG\nTCTGTGTAAATTACCCAGCCTCACGTATTCCTTTAGAGCAATGCAAAACAGACTAGACAAAAGGCTTTTAAAAGTCTA\nATCTGAGATTCCTGACCAAATGT\n+\nCCCFFFFFHHHHHJJJJJJJJJJJJHIJJJJJJJJJIJJJJJJJJJJJJJJJJJJJHIJGHJIJJIJJJJJHHHHHHH\nFFFFFFFEDDEEEEDDDDDDDDD\nThe first line is metadata, the second is the sequence, then you have an empty line (symbol +), and the quality scores (encoded by letters as in this table)."
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#exercise-writing-on-files",
    "href": "resources/Slides/Introduction/slides.backup.html#exercise-writing-on-files",
    "title": "Use GenomeDK",
    "section": "Exercise: Writing on files",
    "text": "Exercise: Writing on files\nUseful utility 2: nano text editor. It open, edits and saves text files. Very useful for changes on the fly.\n\nTry nano data.fastq. Change a base in the first sequence,\nthen press Ctrl+O to save (give it a new file name newData.fastq and press Enter)\npress Ctrl+X to exit. If you use ls you can see the new saved file."
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#virtual-environments",
    "href": "resources/Slides/Introduction/slides.backup.html#virtual-environments",
    "title": "Use GenomeDK",
    "section": "Virtual environments",
    "text": "Virtual environments\nEach project needs specific software versions dependent on each other for reproducibility - without interferring with other projects.\n \n\n\n\n\n\n\n\nDefinition\n\n\nA virtual environment keeps project-specific softwares and their dependencies separated\n \nA package manager is a software that can retrieve, download, install, upgrade packages easily and reliably"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#exercise---pixi",
    "href": "resources/Slides/Introduction/slides.backup.html#exercise---pixi",
    "title": "Use GenomeDK",
    "section": "Exercise - Pixi",
    "text": "Exercise - Pixi\nFirst of all, we open the desktop interface to GenomeDK at desktop.genome.au.dk. Choose the Front end for the login.\nThe desktop session will be operative even if you close and reopen your browser afterwards!\n\nThe terminal will work as if you logged into the frontend (The desktop is logged into the front-end node already). You can also use the browser!"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#conda",
    "href": "resources/Slides/Introduction/slides.backup.html#conda",
    "title": "Use GenomeDK",
    "section": "Conda",
    "text": "Conda\n \nConda is both a virtual environment and a package manager.\n\neasy to use and understand\ncan handle quite big environments\nenvironments are easily shareable\na large archive (Anaconda) of packages\nactive community of people archiving their packages on Anaconda"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#pixi",
    "href": "resources/Slides/Introduction/slides.backup.html#pixi",
    "title": "Use GenomeDK",
    "section": "Pixi",
    "text": "Pixi\nA newer virtual env. and package manager\n \n\nAn upgrade of Conda in speed and stability\nCan install the same packages as conda"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#exercise-virt.env.-for-rstudio-and-jupyterlab",
    "href": "resources/Slides/Introduction/slides.backup.html#exercise-virt.env.-for-rstudio-and-jupyterlab",
    "title": "Use GenomeDK",
    "section": "Exercise: Virt.Env. for Rstudio and Jupyterlab",
    "text": "Exercise: Virt.Env. for Rstudio and Jupyterlab"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#useful-links-for-conda",
    "href": "resources/Slides/Introduction/slides.backup.html#useful-links-for-conda",
    "title": "Use GenomeDK",
    "section": "Useful links for conda:",
    "text": "Useful links for conda:\n\nConda cheat sheet with all the things you can do to manage environments\nAnaconda where you can search for packages"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#file-formats",
    "href": "resources/Slides/Introduction/slides.backup.html#file-formats",
    "title": "Use GenomeDK",
    "section": "File formats",
    "text": "File formats\nMany files you use in bioinformatics are nothing else than text files which are written in a specific matter. This specific way of arranging the text in the files gives you many of the file formats you encounter when doing bioinformatics.\n \n\n\n\n\n\n\nNote\n\n\nSome file formats are encoded differently than with plain ASCII text, and cannot usually be seen with a text editor."
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#less-for-reading-files",
    "href": "resources/Slides/Introduction/slides.backup.html#less-for-reading-files",
    "title": "Use GenomeDK",
    "section": "Less for reading files",
    "text": "Less for reading files\nless is perfect for reading text files: you can scroll with the arrows, and quit pressing q. Try\n\nless data.fastq\n  The very first sequence you see should be\n@HISEQ_HU01:89:H7YRLADXX:1:1101:1116:2123 1:N:0:ATCACG\nTCTGTGTAAATTACCCAGCCTCACGTATTCCTTTAGAGCAATGCAAAACAGACTAGACAAAAGGCTTTTAAAAGTCTA\nATCTGAGATTCCTGACCAAATGT\n+\nCCCFFFFFHHHHHJJJJJJJJJJJJHIJJJJJJJJJIJJJJJJJJJJJJJJJJJJJHIJGHJIJJIJJJJJHHHHHHH\nFFFFFFFEDDEEEEDDDDDDDDD\nThe first line is metadata, the second is the sequence, then you have an empty line (symbol +), and the quality scores (encoded by letters as in this table)."
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#counting",
    "href": "resources/Slides/Introduction/slides.backup.html#counting",
    "title": "Use GenomeDK",
    "section": "Counting",
    "text": "Counting\nHow many lines are there in your file? The command wc can show that to you:\nwc -l data.fastq\n \nThe file has 100000 lines, or 25000 sequences (each sequence is defined by 4 lines).\n \n\n\n\n\n\n\nTip\n\n\nwc has many functionalities. As always, look for the manual or examples to see how you can use it in other many ways."
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#copy-and-move",
    "href": "resources/Slides/Introduction/slides.backup.html#copy-and-move",
    "title": "Use GenomeDK",
    "section": "Copy and Move",
    "text": "Copy and Move\ncp can copy one or more files - we use it on our data:\ncp data.fastq dataCopy.fastq\n \nmv moves a file into another folder - here we move it into our WD, which simply changes its filename:\nmv data.fastq ./dataOriginal.fastq"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#writing-on-a-file",
    "href": "resources/Slides/Introduction/slides.backup.html#writing-on-a-file",
    "title": "Use GenomeDK",
    "section": "Writing on a file",
    "text": "Writing on a file\nWrite something on a file using &gt;:\nhead -4 dataOriginal.fastq &gt; smallFile.fastq\n \nprints out the first four lines of the data into smallFile.fastq.\n \n\n\n\n\n\n\nWarning\n\n\nUsing again &gt; will overwrite the file!"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#piping",
    "href": "resources/Slides/Introduction/slides.backup.html#piping",
    "title": "Use GenomeDK",
    "section": "Piping",
    "text": "Piping\nYou can create small pipelines directly on the shell with the symbol |. The output of a command and send it to the next command when you have | in between. For example,\ngrep NNNNN dataOriginal.fastq\nfinds the pattern NNNNN in the data.\nHow to find it in the first hundred sequences? Easy! we pipe head into grep:\nhead -400 dataOriginal.fastq | grep NNNNN"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#compendium-for-file-manipulation",
    "href": "resources/Slides/Introduction/slides.backup.html#compendium-for-file-manipulation",
    "title": "Use GenomeDK",
    "section": "Compendium for file manipulation",
    "text": "Compendium for file manipulation\n\n\nList Files and Directories\n\nls: List files and directories in the current directory.\nls -l: List in long format (detailed information).\nls -a: List all files, including hidden ones (starting with .).\nls -lh: List with human-readable file sizes (e.g., KB, MB).\nls -R: Recursively list files in directories and subdirectories.\n\nCopy Files and Directories\n\ncp source_file destination: Copy a file to a destination.\ncp file1 file2 dir/: Copy multiple files to a directory.\ncp -r dir1 dir2: Recursively copy a directory and its contents.\n\nMove (or Rename) Files and Directories\n\nmv source_file destination: Move a file to a new location or rename it.\nmv file1 file2 dir/: Move multiple files to a directory.\nmv oldname newname: Rename a file or directory.\n\nRemove Files and Directories\n\nrm file: Remove a file.\nrm -f file: Force remove a file (suppress confirmation).\nrm -r dir: Recursively remove a directory and its contents.\nrm -rf dir: Forcefully and recursively remove a directory and its contents (use with caution).\n\nCreate Directories\n\nmkdir dir_name: Create a new directory.\nmkdir -p parent_dir/child_dir: Create a directory with parent directories as needed.\n\n\nChange File Permissions\n\nchmod 644 file: Set read/write for owner, and read-only for group and others.\nchmod 755 file: Set read/write/execute for owner, and read/execute for group and others.\nchmod +x file: Add execute permission to a file.\nchmod -R 755 dir: Recursively change permissions for a directory and its contents.\n\nChange File Ownership\n\nchown user file: Change the ownership of a file.\nchown user:group file: Change the owner and group of a file.\nchown -R user:group dir: Recursively change ownership of a directory and its contents.\n\nFile Information\n\nfile filename: Display the type of a file.\nstat filename: Show detailed information about a file (size, permissions, timestamps).\ndu -sh file/dir: Display the disk usage of a file or directory (in human-readable format).\n\nCreate and View Files\n\ntouch filename: Create an empty file or update the timestamp of an existing file.\ncat filename: View the contents of a file.\nless filename: View the contents of a file, with navigation.\nhead -n 10 filename: View the first 10 lines of a file.\ntail -n 10 filename: View the last 10 lines of a file.\n\nLinks\n\nln file link_name: Create a hard link.\nln -s target link_name: Create a symbolic (soft) link."
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#compendium-for-less",
    "href": "resources/Slides/Introduction/slides.backup.html#compendium-for-less",
    "title": "Use GenomeDK",
    "section": "Compendium for less",
    "text": "Compendium for less\n\n\nBasic Navigation\n\nMove Forward:\n\nSpace or f: Scroll forward by one page.\nDown Arrow or j: Scroll down by one line.\nd: Scroll down by half a page.\n\nMove Backward:\n\nb: Scroll backward by one page.\nUp Arrow or k: Scroll up by one line.\nu: Scroll up by half a page.\n\nGo to Specific Line or Position:\n\nG: Go to the end of the file.\ng: Go to the beginning of the file.\nnumberG or number%: Go to a specific line or percentage in the file.\n\n\nSearching\n\nSearch Forward:\n\n/pattern: Search forward for a pattern (use n to move to the next match).\n\nSearch Backward:\n\n?pattern: Search backward for a pattern (use N to move to the previous match).\n\nRepeat Last Search:\n\nn: Repeat the last search in the same direction.\nN: Repeat the last search in the opposite direction.\n\n\nDisplay Line Numbers\n\nShow Line Numbers:\n\n-N or --LINE-NUMBERS: Show line numbers (must start less with this option).\n\n\nMarking Positions\n\nSet a Mark:\n\nm&lt;letter&gt;: Mark the current position with a letter.\n\nJump to a Mark:\n\n'&lt;letter&gt;: Return to the marked position.\n\n\nExiting\n\nQuit less:\n\nq: Exit less.\n\n\nScrolling Long Lines\n\nMove Left and Right (For Long Lines):\n\nRight Arrow or →: Scroll right.\nLeft Arrow or ←: Scroll left.\n\n\n\nFile Manipulation\n\nOpen Another File:\n\n:e filename: Open another file while inside less.\n\nView Multiple Files:\n\n:n: Go to the next file (if multiple files were opened).\n:p: Go to the previous file.\n\n\nMiscellaneous\n\nFollow File in Real Time:\n\nF: Continuously view a file as it grows (like tail -f).\n\nShow Current Filename:\n\n=: Show the current file name, line number, and percentage through the file.\n\nHelp Menu:\n\nh: Display help with all available commands.\n\n\nView Line Numbers Temporarily (without restarting less)\n\nToggle Line Numbers:\n\n-N: While in a session, use this to toggle line number display."
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#gdk-projects",
    "href": "resources/Slides/Introduction/slides.backup.html#gdk-projects",
    "title": "Use GenomeDK",
    "section": "GDK projects",
    "text": "GDK projects\n\n\n\n\n\n\n\nwhat is a project\n\n\nProjects are contained in /faststorage/project/, and are simple folders with some perks:\n\nyou have to request their creation to GDK administrators\naccess is limited to you, and users you invite\nCPU, GPU, storage and backup usage are registered under the project for each user\nyou can keep track of per-project and -user resource usage"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#creation",
    "href": "resources/Slides/Introduction/slides.backup.html#creation",
    "title": "Use GenomeDK",
    "section": "Creation",
    "text": "Creation\nRequest a project (after login on GDK) with the command\ngdk-project-request -g &lt;project_name&gt;\n \nAfter GDK approval, a project folder with the desired name appears in ~ and /faststorage/project. You should be able to set the WD into that folder:\ncd &lt;project_name&gt;\nor\ncd ~/&lt;project_name&gt;"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#folders-management",
    "href": "resources/Slides/Introduction/slides.backup.html#folders-management",
    "title": "Use GenomeDK",
    "section": "Folders management",
    "text": "Folders management\nHave a coherent folder structure - your future self will thank.\n\nExample of structure, which backs up raw data and analysis"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#download-with-wget",
    "href": "resources/Slides/Introduction/slides.backup.html#download-with-wget",
    "title": "Use GenomeDK",
    "section": "Download with wget",
    "text": "Download with wget\nwget is a utility for command-line-based downloads. It is already installed on GenomeDK and works with http, https, ftp protocols.\n \nExample:\nwget -O ./output.png \\\n     -c \\\n     -b \\\n     https://example.com/image.png\ndownloads a png file and saves it as output.png (option O), downloads in background (-b) and if the download was interrupted earlier, it retrieves it from where it stopped (-c)."
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#scp-transfer",
    "href": "resources/Slides/Introduction/slides.backup.html#scp-transfer",
    "title": "Use GenomeDK",
    "section": "SCP transfer",
    "text": "SCP transfer\nSCP (Secure Copy Protocol) can transfer files securely\n\nbetween a LOCAL and a REMOTE host (your PC and GDK)\nbetween TWO REMOTE hosts (GDK and another cluster)\n\n \nYou can use it to transfer files from your pc to GenomeDK and viceversa, but also between GenomeDK and another computing cluster (for example, downloading data from a collaborator, which resides on a different remote computing system)."
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#interactive-transfer",
    "href": "resources/Slides/Introduction/slides.backup.html#interactive-transfer",
    "title": "Use GenomeDK",
    "section": "Interactive transfer",
    "text": "Interactive transfer\nYou can also do transfering with an interactive software, such as Filezilla, which has an easy interface. Download Filezilla.\n \nWhen done, open Filezilla and use the following information on the login bar:\n\nHost: login.genome.au.dk\nUsername, Password: your GenomeDK username and password\nPort: 22"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#what-is-a-job-on-a-hpc",
    "href": "resources/Slides/Introduction/slides.backup.html#what-is-a-job-on-a-hpc",
    "title": "Use GenomeDK",
    "section": "What is a job on a HPC",
    "text": "What is a job on a HPC\nA computational task executed on requested HPC resources (computing nodes), which are handled by the queueing system (SLURM)."
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#interactive-jobs",
    "href": "resources/Slides/Introduction/slides.backup.html#interactive-jobs",
    "title": "Use GenomeDK",
    "section": "Interactive jobs",
    "text": "Interactive jobs\nUseful to run a non-repetitive task interactively\nExamples:\n\nsplitting by chromosome that one bam file you just got\nopen python/R and do some statistics\ncompress/decompress multiple files, maybe in parallel\n\nOnce you exit from the job, anything running into it will stop."
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#batch-script-sbatch",
    "href": "resources/Slides/Introduction/slides.backup.html#batch-script-sbatch",
    "title": "Use GenomeDK",
    "section": "Batch script (sbatch)",
    "text": "Batch script (sbatch)\nUseful to run a program non-interactively, usually for longer time and without interaction from the user. A batch script contains\n\nthe desired resources\nthe sequence of commands to be executed\n\nand\n\nhas a filename without spaces (forget spaces from now on)\n\nExample\nA file called align.sh such that:\n#!/bin/bash\n#SBATCH --account my_project\n#SBATCH --cpus-per-task= 8\n#SBATCH --mem 16g\n#SBATCH --time 04:00:00\n\n#activate environment\neval \"$(conda shell.bash hook)\"\nconda activate bam_tools\n#index the reference file\nbwa-mem2 index reference/chr2.fa\n#align data\nbwa-mem2 -t 8 reference/chr2.fa \\\n             genomes/S_Korean-2.region.fq.gz \\\n        | samtools sort \\\n            -@ 7 \\\n            -n \\\n            -O BAM \\\n        &gt; alignment/S_Korean-2.sorted.bam\n\nexit 0"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#choosing-the-right-cpu-ram",
    "href": "resources/Slides/Introduction/slides.backup.html#choosing-the-right-cpu-ram",
    "title": "Use GenomeDK",
    "section": "Choosing the right CPU-RAM",
    "text": "Choosing the right CPU-RAM\nTry to run a job with a smaller dataset as a test. While it is running\n\nuse squeue --me and look at the node id\nlog into that node from the front-end:\nssh &lt;NODEID&gt;"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#other-ways-of-running-jobs",
    "href": "resources/Slides/Introduction/slides.backup.html#other-ways-of-running-jobs",
    "title": "Use GenomeDK",
    "section": "Other ways of running jobs",
    "text": "Other ways of running jobs\nBeyond sbatch, you can use other tools for workflows which are\n\nmodular and composable: sequences of commands can be applied in various contexts, composed together in the desired ordering\nscalable and parallel handling many sequences of operations parallelly or interdependently\nflexible where repetitive operations can be automatized over multiple applications\n\nSome workflow tools:\n\nSnakemake\nNextFlow\nGwf\n\n \nGwf has an easy python syntax instead of its own language to write workflows.\n \nLearning a workflow language takes some time commitment, but it is worth the effort."
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#a-taste-of-the-next-workshops",
    "href": "resources/Slides/Introduction/slides.backup.html#a-taste-of-the-next-workshops",
    "title": "Use GenomeDK",
    "section": "A taste of the next workshops",
    "text": "A taste of the next workshops\n\nvirtual terminals with tmux\ngit setup\nadvanced functionalities\n\nawk for advanced text file manipulation\nrsync for synchronization of data\n\nbrowser-based applications\nlaunch containers\ngwf pipelines"
  },
  {
    "objectID": "resources/Slides/Introduction/slides.backup.html#your-input-for-topics-and-evaluation",
    "href": "resources/Slides/Introduction/slides.backup.html#your-input-for-topics-and-evaluation",
    "title": "Use GenomeDK",
    "section": "Your input for topics and evaluation",
    "text": "Your input for topics and evaluation\n\nIndlæser…"
  },
  {
    "objectID": "resources/Slides/Advanced/slides.html#when-you-need-to-ask-for-help",
    "href": "resources/Slides/Advanced/slides.html#when-you-need-to-ask-for-help",
    "title": "Advanced GenomeDK",
    "section": "When you need to ask for help",
    "text": "When you need to ask for help\n\nPractical help:\nSamuele (BiRC, MBG) - samuele@birc.au.dk\nDrop in hours:\n\nBioinformatics Cafe: https://abc.au.dk, abcafe@au.dk\nSamuele (BiRC, MBG) - samuele@birc.au.dk - we just set up a meeting/zoom\n\nGeneral mail for assistance\nsupport@genome.au.dk"
  },
  {
    "objectID": "resources/Slides/Advanced/slides.html#program",
    "href": "resources/Slides/Advanced/slides.html#program",
    "title": "Advanced GenomeDK",
    "section": "Program",
    "text": "Program\n\n10:00-11:00:\n\nWorkshop Introduction\nFrequently used on UNIX\nrsync file transfer\n\n11:00-12:00:\n\nBatch jobs on the cluster\n\n12:45-13:30:\n\nContainers (Docker, singularity)\n\n13:30-14.30:\n\nFeedback\nQuestions and discussions\nLook into one of the Extras you are interested in"
  },
  {
    "objectID": "resources/Slides/Advanced/slides.html#extras",
    "href": "resources/Slides/Advanced/slides.html#extras",
    "title": "Advanced GenomeDK",
    "section": "Extras",
    "text": "Extras\nDocumentation you can explore on your own.\n\nAn advanced function to download selected folders from github\nSetting up ssh keys on github\nWeb applications on GenomeDK\nBatch scripts\nManaging multiple terminals on tmux\nSet up jupyter notebooks on VScode"
  },
  {
    "objectID": "resources/Slides/Advanced/slides.html#get-the-slides",
    "href": "resources/Slides/Advanced/slides.html#get-the-slides",
    "title": "Advanced GenomeDK",
    "section": "Get the slides",
    "text": "Get the slides\nWebpage: https://hds-sandbox.github.io/GDKworkshops/\n\nSlides will always be up to date in this webpage"
  },
  {
    "objectID": "resources/Slides/Advanced/slides.html#navigate-the-slides",
    "href": "resources/Slides/Advanced/slides.html#navigate-the-slides",
    "title": "Advanced GenomeDK",
    "section": "Navigate the slides",
    "text": "Navigate the slides"
  },
  {
    "objectID": "resources/Slides/Advanced/slides.html#configuration-files",
    "href": "resources/Slides/Advanced/slides.html#configuration-files",
    "title": "Advanced GenomeDK",
    "section": "Configuration files",
    "text": "Configuration files\nYour ~/.bashrc file contains settings for your user. Those are bash commands which run at every login.\n \nCommon practice for many softwares is to have a configuration file in your home, often starting with ., which makes it a hidden file.\n \nExamples:\n\n.emacs for emacs\n.gitconfig for github\n.condarc for conda\n.nanorc for nano editor\n\nPlus other things like your command history on the terminal (~/.bash_history) and your settings (~/.bashrc)."
  },
  {
    "objectID": "resources/Slides/Advanced/slides.html#exercise-i-singularity-settings",
    "href": "resources/Slides/Advanced/slides.html#exercise-i-singularity-settings",
    "title": "Advanced GenomeDK",
    "section": "Exercise I: singularity settings",
    "text": "Exercise I: singularity settings\nLet’s make a useful setting to run at each login. We will need a temporary folder for singularity containers (more on those later) when downloaded. Default is your home, which will be filled up in no time (folder ~/.singularity) with cache material.\n \nEdit the file ~/.bashrc (use nano ~/.bashrc or any editor you want). Add those lines:\nmkdir -p -m 700 /tmp/$USER\nexport SINGULARITY_TMPDIR=/tmp/$USER\nexport SINGULARITY_CACHEDIR=/tmp/$USER\n \nThe -m 700 option for mkdir command ensures also you are the only one which can access the temporary files. Useful is you use a container with password or sensitive info, so no one can access it (/tmp/ is a public folder)!"
  },
  {
    "objectID": "resources/Slides/Advanced/slides.html#exercise-ii---aliases",
    "href": "resources/Slides/Advanced/slides.html#exercise-ii---aliases",
    "title": "Advanced GenomeDK",
    "section": "Exercise II - aliases",
    "text": "Exercise II - aliases\n\n\n\n\n\n\nWarning\n\n\nPlease run this exercise so that we can use some of the aliases and functions in the rest of the workshop.\n\n\n\nNow, there are many repetitive things we do every day. For example:\n\nremove files and double check we can\ncd ../ and cd ../../ and … and cd ../../../../../../../\n\nand every time it is just annoying to waste precious time. Why not creating some aliases which you can write in their place? Copy the aliases from the list below and add them in your .bashrc file:\n## Safe file handling\nalias rmi='rm -i'\nalias cpi='cp -i'\nalias mvi='mv -i'\n\n## Upwards navigation in the File system\nalias ..='cd ..'\nalias ...='cd ../../../'\nalias ....='cd ../../../../'\nalias .....='cd ../../../../../'\n\n## List views\nalias ll='ls -laht' #detailed\nalias l='ls -aC' #compressed"
  },
  {
    "objectID": "resources/Slides/Advanced/slides.html#exercise-iii---functions",
    "href": "resources/Slides/Advanced/slides.html#exercise-iii---functions",
    "title": "Advanced GenomeDK",
    "section": "Exercise III - functions",
    "text": "Exercise III - functions\nYou can also create functions including multiple commands: for example making a directory and then cd into it, or opening a terminal in an existing job (more about this later on). Add those to your ~/.bashrc file as well.\n\n\n\n\n\n\nNote\n\n\nThese are just inspirations, you can create any alias and function to avoid repetitive/long commands. Wrap all your useful repetitive commands into the ~/.bashrc file!\n\n\n\n## make and cd\n## make a folder and go into it\nmkcd() {\n    mkdir -p $1; cd $1\n    echo created $1\n    }\n\n## interactive job using the same resources of\n## an existing job already running\n## useful to debug and check resource usage\n## example of usage: sshell 12345678\n## job id can be found with: squeue --me\nsshell() {\n  srun --jobid $1 --overlap --pty bash\n}"
  },
  {
    "objectID": "resources/Slides/Advanced/slides.html#transfer-and-sync-with-rsync",
    "href": "resources/Slides/Advanced/slides.html#transfer-and-sync-with-rsync",
    "title": "Advanced GenomeDK",
    "section": "transfer and sync with rsync",
    "text": "transfer and sync with rsync\nrsync is a very versatile tool for\n\ntransfering from remote to local host (and viceversa)\ncopying from local to local host (e.g. data backups/sync)\ntransfering only files which has changed from last copy (incremental copy)\n\n\n\n\n\n\n\nWarning\n\n\nrsync cannot make a transfer between two remote hosts, e.g. running from your PC to transfer data between GenomeDK and Computerome.\nrsync cannot download from web URLs\n\n\n\nLots of options you can find in the manual (would require a workshop only for that)\n\n rsync manual"
  },
  {
    "objectID": "resources/Slides/Advanced/slides.html#exercise",
    "href": "resources/Slides/Advanced/slides.html#exercise",
    "title": "Advanced GenomeDK",
    "section": "Exercise",
    "text": "Exercise\nLog into GenomeDK. Create anywhere you prefere a folder called advancedGDK containing rsync/data\nmkdir -p advancedGDK/rsync/data\ncd advancedGDK/rsync\n \nCreate 100 files with extensions fastq and log in the data folder\ntouch data/file{1..100}.fastq data/file{1..100}.log"
  },
  {
    "objectID": "resources/Slides/Advanced/slides.html#exercise---continued-only-for-linux-and-mac-users",
    "href": "resources/Slides/Advanced/slides.html#exercise---continued-only-for-linux-and-mac-users",
    "title": "Advanced GenomeDK",
    "section": "Exercise - continued (only for Linux and Mac users)",
    "text": "Exercise - continued (only for Linux and Mac users)\nExercise continues for all users in the next slide\n \nTransfer the whole folder data to your computer from GenomeDK. Open a terminal on your laptop and use the correct command from the previous slide!"
  },
  {
    "objectID": "resources/Slides/Advanced/slides.html#exercise-batch-script",
    "href": "resources/Slides/Advanced/slides.html#exercise-batch-script",
    "title": "Advanced GenomeDK",
    "section": "Exercise: batch script",
    "text": "Exercise: batch script\nPrepare the data needed for the exercise. Create a subfolder called batchGDK in the advancedGDK folder:\nmkdir -p advancedGDK/batchGDK\ncd advancedGDK/batchGDK\n \nDownload the data needed for the exercise:\nwget https://github.com/hartwigmedical/testdata/raw/master/100k_reads_hiseq/TESTX/TESTX_H7YRLADXX_S1_L001_R1_001.fastq.gz \\\n     -O ./data.fastq.gz\n\nwget http://genomedata.org/rnaseq-tutorial/fasta/GRCh38/chr22_with_ERCC92.fa -O ref.fasta.gz"
  },
  {
    "objectID": "resources/Slides/Advanced/slides.html#calibrating-resources",
    "href": "resources/Slides/Advanced/slides.html#calibrating-resources",
    "title": "Advanced GenomeDK",
    "section": "Calibrating resources",
    "text": "Calibrating resources\nTry to run a job with a smaller dataset as a test. Or run one of many jobs of the same type. While the job is running\n\nuse squeue --me and look at the job id\nlog into the job from the front-end terminal using an interactive session and your job id:\nsshell 33735928\n\n\n\n\n\n\n\nWarning\n\n\nThe command above only works if your job is still running! Otherwise it is finished, has failed or is still in queue."
  },
  {
    "objectID": "resources/Slides/Advanced/slides.html#container-vs-virtual-env-vs-vm",
    "href": "resources/Slides/Advanced/slides.html#container-vs-virtual-env-vs-vm",
    "title": "Advanced GenomeDK",
    "section": "Container vs virtual env vs VM",
    "text": "Container vs virtual env vs VM\nA virtual environment isolates dependencies for a specific programming language within the same operating system. It does not include the operating system or system-level dependencies, so it depends on the hosting system."
  },
  {
    "objectID": "resources/Slides/Advanced/slides.html#scope-of-containers",
    "href": "resources/Slides/Advanced/slides.html#scope-of-containers",
    "title": "Advanced GenomeDK",
    "section": "Scope of containers",
    "text": "Scope of containers\n\nContainers are usually thought as packing a specific application which can run anywhere (or, which is portable).\nE.g. annoying bioinformatics software requiring specific libraries or long installations.\nMany containers are done with Docker, but this is not installed on GenomeDK\nGenomeDK has Singularity, which can also run programs installed in Docker containers.\nVery practical to pull and use containers in workflows."
  },
  {
    "objectID": "resources/Slides/Advanced/slides.html#where-to-find-containers",
    "href": "resources/Slides/Advanced/slides.html#where-to-find-containers",
    "title": "Advanced GenomeDK",
    "section": "Where to find containers?",
    "text": "Where to find containers?\nTypical repositories with pre-built containers are:\n\nBiocontainers: community-driven initiative to containerize bioinf softwares.\n\nx10K tools x100K+ containers\nbioconda package index lists all software versions\nthe Registry page has a searchable interface to find what you need\n\nDockerHub registry: Public hub for Docker images, often including official containers from software developers\nQuay: Same philosophy of DockerHub.\n\nOnce you find a container on the websites, simply use (eventually adapt) the provided code to pull it locally."
  },
  {
    "objectID": "resources/Slides/Advanced/slides.html#exercise-i-a-simple-bioinformatics-container",
    "href": "resources/Slides/Advanced/slides.html#exercise-i-a-simple-bioinformatics-container",
    "title": "Advanced GenomeDK",
    "section": "Exercise I: a simple bioinformatics container",
    "text": "Exercise I: a simple bioinformatics container\nWe use biocontainers to pull containers and recreate a little bulkRNA alignment.\n \nMake a folder called containers101 in the advancedGDK directory.\nmkdir -p advancedGDK/containers101\ncd advancedGDK/containers101\n \nFind a bash bioinformatics software you know on the Biocontainer Registry and open it to see a detailed description - if you have no good ideas look for the minimap2 aligner. You should see a software documentation illustrating how to run the software in various ways - see next slide for a screenshot."
  },
  {
    "objectID": "resources/Slides/Advanced/slides.html#exercise-ii-docker-alternative",
    "href": "resources/Slides/Advanced/slides.html#exercise-ii-docker-alternative",
    "title": "Advanced GenomeDK",
    "section": "Exercise II: docker alternative",
    "text": "Exercise II: docker alternative\nYou can also pull and run a container from DockerHub. For example, for the biocontainers/bwa-mem2 container you will need to adapt the command a bit, because it is not a singularity container.\nsingularity pull samtools_docker.sif docker://biocontainers/samtools:v1.9-4-deb_cv1\n \n\n\n\n\n\n\nNote\n\n\nThe correct path docker://biocontainers/samtools:v1.9-4-deb_cv1 can be found on the DockerHub page of the container. Here is the https://hub.docker.com/r/biocontainers/samtools."
  },
  {
    "objectID": "resources/Slides/Advanced/slides.html#other-options-for-singularity",
    "href": "resources/Slides/Advanced/slides.html#other-options-for-singularity",
    "title": "Advanced GenomeDK",
    "section": "Other options for singularity",
    "text": "Other options for singularity\nA few other options which can be used in singularity. When you need those really depends on the application:\n\n--fakeroot: Allows running the container with root privileges in a user namespace. Useful for containers that require root access without needing actual root privileges.\n--writable: Enables writing to the container image. This is useful for making changes to the container, but it requires the container to be writable. --writable-tmpfs to avoid changes to be persistent in a non-writable container.\n--contain: Isolates the container from the host system by limiting access to the host’s filesystem.\n--no-home: Prevents the container from automatically binding the user’s home directory. Avoids exposing your home directory to the container.\n--cleanenv: Clears all environment variables except those explicitly set for the container.\n--nv: Enables NVIDIA GPU support by binding the necessary libraries and drivers. Equivalent for AMD GPUs is --rocm (not the case on GDK).\n--pwd: Sets the working directory inside the container.\n--bind: Binds specific directories from the host to the container. Useful to share data between host and container.\n--env: Sets environment variables inside the container. This is useful for configuring the container’s behavior or passing in secrets."
  },
  {
    "objectID": "resources/Slides/Advanced/slides.html#create-ssh-key",
    "href": "resources/Slides/Advanced/slides.html#create-ssh-key",
    "title": "Advanced GenomeDK",
    "section": "Create ssh key",
    "text": "Create ssh key\nOn the cluster run the following command to create a new ssh key. Use your github email address in place of GithubAccountMail@example.com.\nssh-keygen -t ed25519 -C \"GithubAccountMail@example.com\"\n \nWhen asked, you can choose to name the file. Call it ~/.ssh/id_ed25519_github. When asked for password, you can leave it empty (press enter).\n \n\n\n\n\n\n\nWarning\n\n\nNote that the key must be saved in the folder ~/.ssh/. This is the usual place where ssh looks for keys on Linux."
  },
  {
    "objectID": "resources/Slides/Advanced/slides.html#add-the-ssh-key-to-your-ssh-agent",
    "href": "resources/Slides/Advanced/slides.html#add-the-ssh-key-to-your-ssh-agent",
    "title": "Advanced GenomeDK",
    "section": "Add the ssh key to your ssh agent",
    "text": "Add the ssh key to your ssh agent\nAdd the key to the ssh agent, which manages your keys. Write the following on your ~/.bashrc file using a text editor:\n# Start ssh-agent for github if not already running\neval \"$(ssh-agent -s)\" &gt; /dev/null\nssh-add -l &&gt;/dev/null || ssh-add ~/.ssh/id_ed25519_github\n \nNow print your public key on the terminal. Copy the command’s output because you need to paste it on the github website:\ncat ~/.ssh/id_ed25519_github.pub\n\n\n\n\n\n\nNote\n\n\nThe key looks like this ssh-ed25519 ABCSC3Nza.....tDUFLn GithubAccountMail@example.com. You must copy all of it including ssh-ed25519 at the beginning and your email address at the end."
  },
  {
    "objectID": "resources/Slides/Advanced/slides.html#a-more-advanced-bash-function-for-github",
    "href": "resources/Slides/Advanced/slides.html#a-more-advanced-bash-function-for-github",
    "title": "Advanced GenomeDK",
    "section": "A more advanced bash function for github",
    "text": "A more advanced bash function for github\nHere a more advanced bash function you can paste into your ~/.bashrc file. Why not making one for git clone downloading only the latest commit history and choosing specific folders for the repository?\n# Git clone with depth 1 and choice of folders\n#   arg 1: username/repository\n#   arg 2: folders and files in quotes '', backspace separator\n#   arg 3: local download folder name (optional, default:repo)\n#   arg 4: branch (optional, default:main)\n# Examples:\n#   ghdir github/gitignore 'community Global' test01 main\n#   ghdir github/gitignore 'community Global' \nghdir() {\n        echo Downloading from $1 in folder $3\n        echo Selecting $2\n        if [ -z \"$4\" ]; then\n          BRANCH=\"-b main\"\n        else\n          BRANCH=\"-b $4\"\n        fi\n        git clone --no-checkout $BRANCH --filter=blob:none --depth 1 https://github.com/$1.git $3\n        if [ -z \"$3\" ]; then\n          folder=$(echo \"$1\" | cut -d'/' -f2)\n          cd \"$folder\"\n        else\n          cd \"$3\"\n        fi\n        git sparse-checkout init --cone\n        git sparse-checkout set $2\n        git checkout\n    }"
  },
  {
    "objectID": "resources/Slides/Advanced/slides.html#exercise-1",
    "href": "resources/Slides/Advanced/slides.html#exercise-1",
    "title": "Advanced GenomeDK",
    "section": "Exercise",
    "text": "Exercise\ntmux is a keyboard-only software. But you can set it up also to change windows and panes with the mouse. Simply run this command (only once) to enable mouse usage:\necho \"set -g mouse\" &gt;&gt; ~/.tmux.conf\n\n\n\n\n\n\nWarning\n\n\nUsing the mouse can create problems in some terminal programs, where copy-paste starts acting weird, e.g. on Mac computers and on Windows’ Moba XTerm software. In case you have a bad experience, remove the mouse setup from the file ~/.tmux.conf\n\n\n\n \nYou can start a tmux session anywhere. It is easier to navigate sessions giving them a name. For example start a session called example1:\ntmux new -s example1"
  },
  {
    "objectID": "resources/Slides/Advanced/slides.html#launching-separate-downloads-at-the-same-time",
    "href": "resources/Slides/Advanced/slides.html#launching-separate-downloads-at-the-same-time",
    "title": "Advanced GenomeDK",
    "section": "Launching separate downloads at the same time",
    "text": "Launching separate downloads at the same time\nStart a new session without attaching to it (d option), and call it downloads:\ntmux new-session -d -s downloads\nverify the session is there with tmux ls.\n\n\n\n\n\n\nWarning\n\n\nIf you want a new session attaching to it, you need to detach from the current session with Ctrl + b + d.\n\n\n\nCreate a text file with few example files for this workshop to be downloaded.\ncurl -s https://api.github.com/repos/hds-sandbox/GDKworkshops/contents/Examples/rsync | jq -r '.[] | .download_url' &gt; downloads.txt"
  },
  {
    "objectID": "resources/Slides/Advanced/slides.html#which-port-to-use",
    "href": "resources/Slides/Advanced/slides.html#which-port-to-use",
    "title": "Advanced GenomeDK",
    "section": "Which port to use",
    "text": "Which port to use\n\nEach server process on a machine needs a unique port (p2 on previous figure) to avoid conflicts.\nPorts are in common between users on GenomeDK. So you can only use the port corresponding to your user number, which you can see with\necho $UID\nYou will see all this in the next exercise\n\n\n\n\n\n\n\n\nbetter safe than sorry\n\n\nLaunch a web application which has tokens (a random code in the URL for the browser) or a password you can setup. In theory, anyone on your same node of the cluster can get into your server process and see your program and data!"
  },
  {
    "objectID": "resources/Slides/Advanced/slides.html#exercise-jupyterlab-web-server",
    "href": "resources/Slides/Advanced/slides.html#exercise-jupyterlab-web-server",
    "title": "Advanced GenomeDK",
    "section": "Exercise: jupyterlab web server",
    "text": "Exercise: jupyterlab web server\nIf you DO NOT have the conda package manager, you can quickly install it from the box below, otherwise move to the next slide!\n\n\n\n\n\n\n\nInstall conda\n\n\nRun the installation script to install the software. There are some informative messages during the installation. You might need to say yes a few times\nwget https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh -O miniforge.sh\nchmod +x miniforge.sh\nbash miniforge.sh -b\n~/miniforge3/bin/conda init bash\nsource ~/.bashrc\nWhen you are done, you need a little bit of configuration. You can run the following command to configure conda (run them only once, they are not needed again):\nconda config --append channels conda-forge\nconda config --append channels bioconda\nconda config --set channel_priority strict\nconda config --set auto_activate_base false\nsource ~/.bashrc\nNow you are ready to move on!"
  },
  {
    "objectID": "resources/Slides/Advanced/slides.html#configure-access-to-cluster-from-vscode",
    "href": "resources/Slides/Advanced/slides.html#configure-access-to-cluster-from-vscode",
    "title": "Advanced GenomeDK",
    "section": "Configure access to cluster from VSCode",
    "text": "Configure access to cluster from VSCode\nDownload VSCode and open it. Go to the plugin tab (red circle)"
  },
  {
    "objectID": "resources/Slides/Advanced/slides.html#tunneling-to-a-computing-node",
    "href": "resources/Slides/Advanced/slides.html#tunneling-to-a-computing-node",
    "title": "Advanced GenomeDK",
    "section": "Tunneling to a computing node",
    "text": "Tunneling to a computing node\nNow close VScode and reopen it. Open the Remote Explorer (from the toolbar on the left). There you should now see login.genome.au.dk as configured remote. Click on the little option symbol close to the SSH menu. The option symbol is given by the little clogwheel icon (red circle)."
  },
  {
    "objectID": "cards/SamueleSoraggi.html",
    "href": "cards/SamueleSoraggi.html",
    "title": "Samuele Soraggi",
    "section": "",
    "text": "Samuele is a Sandbox data scientist based at the university of Aarhus. During his academic activity he has gained experience in population genomics, transcriptomics, single cell multiomics and spans his knowledge across various themes of advanced computational statistics."
  }
]